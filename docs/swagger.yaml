basePath: /api/v1/erp
definitions:
  api.Response:
    properties:
      data: {}
      error:
        type: boolean
      message:
        type: string
      validation_errors:
        additionalProperties:
          type: string
        type: object
    type: object
  api.TableName:
    enum:
    - invitation
    - bride
    - groom
    type: string
    x-enum-varnames:
    - Invitations
    - Bride
    - Groom
  models.Attachment:
    properties:
      createdAt:
        type: string
      file_name:
        type: string
      file_size:
        type: integer
      file_type:
        type: string
      file_url:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      table_id:
        type: string
      table_name:
        type: string
    type: object
  models.Bride:
    properties:
      additional_info:
        type: string
      address:
        type: string
      child_to:
        type: string
      father_name:
        type: string
      id:
        type: string
      insta_id:
        type: string
      mother_name:
        type: string
      name:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: string
    type: object
  models.BrideView:
    properties:
      additional_info:
        type: string
      address:
        type: string
      child_to:
        type: string
      father_name:
        type: string
      insta_id:
        type: string
      mother_name:
        type: string
      name:
        type: string
      user_id:
        type: string
    type: object
  models.Groom:
    properties:
      additional_info:
        type: string
      address:
        type: string
      child_to:
        type: string
      father_name:
        type: string
      id:
        type: string
      insta_id:
        type: string
      mother_name:
        type: string
      name:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: string
    type: object
  models.GroomView:
    properties:
      additional_info:
        type: string
      address:
        type: string
      child_to:
        type: string
      father_name:
        type: string
      insta_id:
        type: string
      mother_name:
        type: string
      name:
        type: string
      user_id:
        type: string
    type: object
  models.Invitation:
    properties:
      id:
        type: string
      lover_story:
        type: string
      moment:
        type: string
      quotes:
        type: string
      title:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: string
    type: object
  models.InvitationView:
    properties:
      lover_story:
        type: string
      moment:
        type: string
      quotes:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
  models.RefreshTokenView:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  models.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      password:
        type: string
      phone:
        type: string
    type: object
  models.UserLoginView:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.UserView:
    properties:
      email:
        type: string
      password:
        type: string
      phone:
        type: string
    required:
    - email
    - password
    - phone
    type: object
info:
  contact: {}
  description: This is an API documentation of Invitation.
  title: Invitation API Documentation
  version: "1.0"
paths:
  /attachments:
    get:
      consumes:
      - application/json
      description: list a attachments type with given data
      parameters:
      - description: Filter Deal Stage by inactive status
        in: query
        name: is_active
        type: boolean
      - description: State if pagination is required or not
        in: query
        name: pagination
        type: boolean
      - description: Enter Page number
        in: query
        name: page
        type: integer
      - description: Enter Page limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Attachment'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: List a attachments type
      tags:
      - attachments
    post:
      consumes:
      - multipart/form-data
      description: creates a attachments type with given data
      parameters:
      - in: formData
        name: table_id
        type: string
      - enum:
        - invitation
        - bride
        - groom
        in: formData
        name: table_name
        type: string
        x-enum-varnames:
        - Invitations
        - Bride
        - Groom
      - description: Multiple image files
        in: formData
        name: images
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Attachment'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: List a attachments type
      tags:
      - attachments
  /attachments/{id}:
    get:
      consumes:
      - application/json
      description: fetches attachments against an id
      parameters:
      - description: Attachment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Attachment'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get attachments by id
      tags:
      - attachments
  /brides:
    get:
      consumes:
      - application/json
      description: fetches all brides from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Bride'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get all brides
      tags:
      - brides
    post:
      consumes:
      - application/json
      description: creates a brides type with given data
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.BrideView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Bride'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Creates a brides type
      tags:
      - brides
  /brides/{id}:
    get:
      consumes:
      - application/json
      description: fetches brides against an id
      parameters:
      - description: Bride ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Bride'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get brides by id
      tags:
      - brides
    post:
      consumes:
      - application/json
      description: updates brides by id from the database
      parameters:
      - description: Bride ID
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.BrideView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Bride'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Update brides by id
      tags:
      - brides
  /grooms:
    get:
      consumes:
      - application/json
      description: fetches all grooms from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Groom'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get all grooms
      tags:
      - grooms
    post:
      consumes:
      - application/json
      description: creates a grooms type with given data
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.GroomView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Groom'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Creates a grooms type
      tags:
      - grooms
  /grooms/{id}:
    get:
      consumes:
      - application/json
      description: fetches grooms against an id
      parameters:
      - description: Groom ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Groom'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get grooms by id
      tags:
      - grooms
    post:
      consumes:
      - application/json
      description: updates grooms by id from the database
      parameters:
      - description: Groom ID
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.GroomView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Groom'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Update grooms by id
      tags:
      - grooms
  /invitations:
    get:
      consumes:
      - application/json
      description: fetches all invitations from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Invitation'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get all invitations
      tags:
      - invitations
    post:
      consumes:
      - application/json
      description: creates a invitations type with given data
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.InvitationView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Invitation'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Creates a invitations type
      tags:
      - invitations
  /invitations/{id}:
    get:
      consumes:
      - application/json
      description: fetches invitations against an id
      parameters:
      - description: Invitation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Invitation'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get invitations by id
      tags:
      - invitations
    post:
      consumes:
      - application/json
      description: updates invitations by id from the database
      parameters:
      - description: Invitation ID
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.InvitationView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Invitation'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Update invitations by id
      tags:
      - invitations
  /login:
    post:
      consumes:
      - application/json
      description: User login with given data
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Token'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: User login
      tags:
      - login
  /refresh-tokens:
    post:
      consumes:
      - application/json
      description: Get new tokens with given data
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RefreshTokenView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Token'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Refresh token
      tags:
      - refresh-token
  /user-registration:
    post:
      consumes:
      - application/json
      description: user-registration with given data
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UserView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: user-registration
      tags:
      - user-register
  /users:
    get:
      description: fetches all get-users from the database
      parameters:
      - description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: Get all get-users
      tags:
      - get-users
securityDefinitions:
  ApiKeyAuth:
    in: Authorization
    name: Bearer
    type: apiKey
swagger: "2.0"
